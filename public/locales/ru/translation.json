{
  "header": {
    "title": "Добро пожаловать в React Boilerplate",
    "home": "Главная",
    "reactHooks": "React Хуки",
    "technologies": "Технологии",
    "contact": "Контакты"
  },
  "footer": {
    "allRightsReserved": "Все права защищены"
  },
  "languageSwitcher": {
    "language": "Язык",
    "english": "English",
    "russian": "Русский"
  },
  "home": {
    "title": "Добро пожаловать в React Boilerplate",
    "description": "Это стартовый шаблон для создания React-приложений с современными инструментами и практиками",
    "welcome": "Cегодня {{date, DATE_FULL}}, текущее время {{time, TIME_WITH_SECONDS}}"
  },
  "technologies": {
    "title": "Технологии проекта",
    "descriptionHome": "Этот проект демонстрирует использование современных веб-технологий для разработки React приложений.",
    "technologys": "Технологии",
    "home": {
      "h2": "Выберите технологию",
      "p1": "Пожалуйста, выберите технологию из списка слева, чтобы увидеть подробную информацию о ней.",
      "p2": "Здесь вы видите значение счётчика: <0>{{counter}}</0>, которое изменяется на <1>главной странице</1>."
    },
    "react": "React - JavaScript библиотека для создания пользовательских интерфейсов",
    "reactDescription": "React - это JavaScript библиотека для создания пользовательских интерфейсов, разработанная Facebook. Она позволяет разработчикам создавать большие веб-приложения, которые могут изменять данные без перезагрузки страницы.",
    "vite": "Vite - Современный инструмент сборки фронтенда",
    "viteDescription": "Vite (фр. «быстрый») — современный инструмент сборки для фронтенд-проектов, разработанный Evan You (создателем Vue.js). Vite предлагает значительно улучшенный процесс разработки по сравнению с традиционными сборщиками.",
    "router": "React Router - Декларативная маршрутизация для React",
    "routerDescription": "React Router - это стандартная библиотека маршрутизации для React. Она позволяет создавать многопользовательские приложения с навигацией без перезагрузки страницы, что обеспечивает плавный пользовательский опыт.",
    "redux": "Redux - Предсказуемый контейнер состояния для JavaScript приложений",
    "reduxDescription": "Redux - это библиотека для управления состоянием в JavaScript приложениях. Она помогает создавать приложения, которые ведут себя предсказуемо, легко тестируются и работают в различных средах.",
    "scss": "SCSS - CSS с суперспособностями",
    "scssDescription": "SCSS (Sassy CSS) - это препроцессор CSS, который расширяет возможности обычного CSS, добавляя переменные, вложенность, миксины, наследование и многое другое."
  },
  "reactHooks": {
    "title": "Пример использования React Hooks",
    "loading": "Загрузка данных...",
    "error": "Ошибка",
    "noData": "Данные отсутствуют",
    "placeholder": "Фильтровать по имени, имени пользователя или электронной почте...",
    "description": "Этот раздел демонстрирует использование React Hooks для получения данных и управления состоянием.",
    "conclusion": "Он показывает, как получать данные, обрабатывать состояния загрузки и ошибок, фильтровать данные на основе пользовательского ввода и стилизовать компонент с помощью SCSS модулей в React приложении.",
    "featuresHtml": [
      "Пользовательский React-хук (<code>useFetchData</code>): Получает данные с API и управляет состояниями загрузки и ошибок.<br/>Данные взяты из <a href=\"https://jsonplaceholder.typicode.com\" target=\"_blank\" rel=\"noopener noreferrer\">проекта jsonplaceholder</a>",
      "Управление состоянием (<code>useState</code>): Управляет значением поля фильтра.",
      "Фильтрация данных: Фильтрует список пользователей на основе введённых данных.",
      "Условный рендеринг: Отображает загрузку, ошибку или данные пользователей в зависимости от состояния.",
      "SCSS-модули: Стилизация компонента с помощью SCSS-модулей для инкапсуляции.",
      "Отображение таблицы: Представляет отфильтрованные данные в виде таблицы.",
      "TransitionGroup: обеспечивает плавные переходы (например, появление/исчезновение) между условным рендерингом с помощью CSSTransition."
    ],
    "btnReloadData": "Перезагрузить данные",
    "btnClearData": "Очистить данные",
    "table": {
      "id": "ID",
      "name": "Имя",
      "username": "Имя пользователя",
      "email": "Электронная почта"
    }
  },
  "contact": {
    "title": "Свяжитесь с нами",
    "description": "Если у вас есть вопросы или предложения по улучшению этого шаблона, пожалуйста, свяжитесь с нами.",
    "name": "Имя",
    "email": "Электронная почта",
    "message": "Сообщение",
    "namePlaceholder": "Введите ваше имя",
    "emailPlaceholder": "Введите вашу электронную почту",
    "messagePlaceholder": "Введите ваше сообщение",
    "send": "Отправить сообщение"
  },
  "notFound": {
    "title": "404",
    "subtitle": "Страница не найдена",
    "description": "Извините, запрошенная страница не существует."
  },
  "dateFormats": {
    "full": "d MMMM yyyy 'г.'",
    "short": "dd.MM.yyyy",
    "time": "HH:mm",
    "timeWithSeconds": "HH:mm:ss"
  }
}
